#!/bin/sh

NAME=$(git config user.name)
EMAIL=$(git config user.email)

if [ -z "$NAME" ]; then
    echo "ERROR: Set user name with 'git config user.name \"<name>\"'"
    exit 1
fi

if [ -z "$EMAIL" ]; then
    echo "ERROR: Set user email with 'git config user.email \"<email>\"'"
    exit 1
fi

git interpret-trailers --if-exists doNothing --trailer "Signed-off-by: $NAME <$EMAIL>" --in-place "$1"

Color_Off='\033[0m' 
BRed="\033[1;31m"         # Red
BGreen="\033[1;32m"       # Green
BYellow="\033[1;33m"      # Yellow
BBlue="\033[1;34m"        # Blue

MSG_FILE=$1
FILE_CONTENT="$(cat $MSG_FILE)"
# Initialize constants here
export REGEX='(^\[feature\] #\d+(, #\d+)*: .+$ |^\[refactor\]( #\d+(, #\d+)*)?: .+$ |\[fix\] #\d+(, #\d+)*: .+$ |^\[documentation\]( #\d+(, #\d+)*)?: .+$ |^\[ci\]( #\d+(, #\d+)*)?: .+$ )'
export ERROR_MSG="Commit message format must match regex \"${REGEX}\""
if [[ $FILE_CONTENT =~ $REGEX ]]; then
 printf "${BGreen}Good commit!${Color_Off}"
else
  printf "${BRed}Bad commit ${BBlue}\"$FILE_CONTENT\"\n"
 printf "${BYellow}$ERROR_MSG\n"
 printf "commit-msg hook failed (add --no-verify to bypass)\n"
 
 exit 1
fi
exit 0
